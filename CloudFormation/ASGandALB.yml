---
AWSTemplateFormatVersion: 2010-09-09
Description: AutoScalingGroup and ApplicationLoadBalancer

Parameters:
  Prefix:
    Type: String

  VPC:
    Type: AWS::EC2::VPC::Id
    Description: Create VPC endpoints in this VPC

  VPCCIDR:
    Type: String
    Description: VPC CIDR block

  S3Bucket:
    Type: String
    Description: S3 bucket for backup

  RootInstanceProfile:
    Type: String

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: LoadBalancerSecurityGroup

  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: SSHSecurityGroup
  
  WebServersSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: WebServersSecurityGroup

  KeyName:
    Type: String
    Default: "test_key"

  ImageId:
    Type: String
    Description: Ubuntu 20.04
    Default: "ami-0885b1f6bd170450c"

  InstanceType:
    Type: String  
    Default: "t2.micro"

  PublicSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The public subnets in which to create the load balancer

  PrivateSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The private subnets in which to create apache servers


Resources:
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${Prefix}-ALB
      Scheme: internet-facing
      Subnets: !Ref PublicSubnets
      SecurityGroups: 
        - !Ref LoadBalancerSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}-alb"

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${Prefix}-tg
      VpcId: !Ref VPC
      Port: 80
      Protocol: HTTP
      HealthCheckPath: "/"
      TargetType: instance
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}-alb-tg"

  LaunchConfigBastion: 
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties: 
      KeyName: 
        Ref: KeyName
      ImageId: 
        Ref: ImageId
      SecurityGroups: 
       - Ref: SSHSecurityGroup
      InstanceType: 
        Ref: InstanceType  

  AutoScalingGroupBastion:          
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties: 
      LaunchConfigurationName: !Ref LaunchConfigBastion
      MinSize: 1
      MaxSize: 1
      VPCZoneIdentifier: !Ref PublicSubnets
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value: !Sub "${Prefix}-asg-bastion"  
    DependsOn: LaunchConfigBastion

  LaunchConfigServers: 
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties: 
      KeyName: 
        Ref: KeyName
      ImageId: 
        Ref: ImageId
      UserData: 
        Fn::Base64: 
          !Sub |
            #!/bin/bash
            apt-get update -y
            apt install awscli -y            
            ec2_ips=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)
            echo "<h1>$ec2_ips</h1>" > index.html
            nohup busybox httpd -f -p 80 &
            echo '*/1 * * * * aws s3 cp /index.html s3://vvs-app-s3-webpage-backup/web-content/index.html' > /tmp/mycrontab.txt
            bash -c 'crontab /tmp/mycrontab.txt'
      SecurityGroups: 
       - Ref: WebServersSecurityGroup
      InstanceType: 
        Ref: InstanceType
      IamInstanceProfile: !Ref RootInstanceProfile   

  AutoScalingGroupServers:          
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties: 
      LaunchConfigurationName: !Ref LaunchConfigServers
      MinSize: 2
      MaxSize: 3
      TargetGroupARNs:
        - Ref: TargetGroup
      VPCZoneIdentifier: !Ref PublicSubnets #here must be PrivateSubnets and UserData will be installing throught the NAT
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value: !Sub "${Prefix}-asg-servers" 
    DependsOn: LaunchConfigServers

Outputs:
  ApplicationLoadBalancer:
    Description: The URL of the ALB
    Value: !GetAtt ApplicationLoadBalancer.DNSName
